package tt.android.downloader;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.MalformedInputException;

import tt.android.fileutils.FileUtils;

public class HttpDownloader {

	URL url = null;
	public String download(String urlStr) {
		StringBuffer stringBuffer = new StringBuffer();
		String line = null;
		BufferedReader bufferReader = null;
		try {
			URL url = new URL(urlStr);
			HttpURLConnection httpURLConnection = (HttpURLConnection) url
					.openConnection();
			System.out.println(httpURLConnection.toString());
			bufferReader = new BufferedReader(new InputStreamReader(
					httpURLConnection.getInputStream()));
			System.out.println(bufferReader);
			while ((line = bufferReader.readLine()) != null) {
				stringBuffer.append(line);
			}
		} catch (Exception e) {
			// : handle exception
			e.printStackTrace();
		} finally {
			try {
				bufferReader.close();
			} catch (Exception e2) {
				// TODO: handle exception
				e2.printStackTrace();
			}
		}
		return stringBuffer.toString();
	}

	public String readFromFile(String path) {
		System.out.println(path);
		StringBuffer stringBuffer = new StringBuffer();
		String line = null;
		File file = new File(path);
		System.out.println(file.exists());
		BufferedReader br = null;
		try {
			br = new BufferedReader(new InputStreamReader(new FileInputStream(
					file)));
			while ((line = br.readLine()) != null) {
				stringBuffer.append(line);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.out.println(e.toString());
			e.printStackTrace();
		} finally {
			try {
				br.close();
			} catch (Exception e2) {
				// TODO: handle exception
				e2.printStackTrace();
			}
		}
		return stringBuffer.toString();
	}
	
	public int downloadFile (String urlString, String path, String fileName) {
		InputStream inputStream = null;
		try {
			FileUtils fileUtils = new FileUtils();
			if (fileUtils.isFileExist(fileName, path)) {
				return 1;
			} else {
				inputStream = getInputStreamFromUrl(urlString);
				File resultFile = fileUtils.write2SDFromInput(path, fileName, inputStream);
				if (resultFile == null) {
					return -1;
				}
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return -1;
		} finally {
			try {
				inputStream.close();
			} catch (Exception e2) {
				// TODO: handle exception
				e2.printStackTrace();
			}
		}
		return 0;
	}
	
	public InputStream getInputStreamFromUrl (String urlString) throws 	MalformedURLException, IOException {
		url = new URL(urlString);
		HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
		InputStream inputStream = httpURLConnection.getInputStream();
		return inputStream;
		
	}
}

